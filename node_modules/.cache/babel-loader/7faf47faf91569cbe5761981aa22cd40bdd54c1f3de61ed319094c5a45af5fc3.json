{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenov\\\\Downloads\\\\todo-app\\\\src\\\\components\\\\TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = ({\n  addTodo,\n  editTodo,\n  editing\n}) => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  useEffect(() => {\n    if (editing) {\n      setInput(editing.text);\n    }\n  }, [editing]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!input) return;\n    editing ? editTodo(editing.id, input) : addTodo({\n      id: Date.now(),\n      text: input,\n      completed: false\n    });\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter task\",\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: editing ? \"Update\" : \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"y6DHqSapwwPGXJTFqIrQC3liGB8=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TodoForm","addTodo","editTodo","editing","_s","input","setInput","text","handleSubmit","e","preventDefault","id","Date","now","completed","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lenov/Downloads/todo-app/src/components/TodoForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst TodoForm = ({ addTodo, editTodo, editing }) => {\n  const [input, setInput] = useState(\"\");\n\n  useEffect(() => {\n    if (editing) {\n      setInput(editing.text);\n    }\n  }, [editing]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!input) return;\n\n    editing\n      ? editTodo(editing.id, input)\n      : addTodo({ id: Date.now(), text: input, completed: false });\n\n    setInput(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Enter task\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <button type=\"submit\">{editing ? \"Update\" : \"Add\"}</button>\n    </form>\n  );\n};\n\nexport default TodoForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,IAAIM,OAAO,EAAE;MACXG,QAAQ,CAACH,OAAO,CAACI,IAAI,CAAC;IACxB;EACF,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,MAAMK,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACL,KAAK,EAAE;IAEZF,OAAO,GACHD,QAAQ,CAACC,OAAO,CAACQ,EAAE,EAAEN,KAAK,CAAC,GAC3BJ,OAAO,CAAC;MAAEU,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEN,IAAI,EAAEF,KAAK;MAAES,SAAS,EAAE;IAAM,CAAC,CAAC;IAE9DR,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEP,OAAA;IAAMgB,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAC3BjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAEd,KAAM;MACbe,QAAQ,EAAGX,CAAC,IAAKH,QAAQ,CAACG,CAAC,CAACY,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACF1B,OAAA;MAAQkB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAEb,OAAO,GAAG,QAAQ,GAAG;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEX,CAAC;AAACrB,EAAA,CA/BIJ,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}